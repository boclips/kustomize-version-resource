#!/usr/bin/env bash

set -e

cwd="$(cd "$(dirname "$0")" && pwd)"
# shellcheck disable=SC1090
source "$cwd/common"

container_id="$(create /opt/resource/out)"
dir=$(mktemp -d -t test-out.XXXXX)

it "emits the pushed version"

init_kustomize_repo "$dir"
commit_image "app=eu.gcr.io/boclips-prod/boclips/my-app:123" "$dir"
copy_kustomize_repo "$dir" "$container_id" remote-repo-v123
echo 124 > "$dir/version-file"
docker cp "$dir/version-file" "$container_id:/tmp/version-file"

assert_equal_json \
    '{
       version: { tag: "124", app: "my-app" },
       metadata: [
         { name: "tag", value: "124" },
         { name: "app", value: "my-app" }
       ]
     }' \
    "$(start_container "$container_id" \
    '{
       source: { uri: "/tmp/remote-repo-v123",
                 branch: "master",
                 private_key: "unused" },
       params: { file: "/tmp/version-file" }
     }')"

it "pushes the referenced version"

docker cp -a "$container_id:/tmp/remote-repo-v123" "$dir/changed-bare-repo"
git clone --quiet "$dir/changed-bare-repo" "$dir/pulled-changes"
new_yaml="$(cat "$dir/pulled-changes/k8s/base/kustomization.yaml")"

if echo "$new_yaml" | grep -q 'newTag: "124"' \
    && echo "$new_yaml" | grep -q 'boclips-version: "124"'
then
    echo "Test passed"
    echo
else
    echo "Test failed"
    echo
    echo "Expected to find the 124 tag in:"
    echo "$new_yaml"
    echo
    exit 1
fi

it "includes a useful commit message"

assert_equal \
    "Bump my-app version to 124" \
    "$(git -C "$dir/pulled-changes" log -n1 --pretty=format:%B)"

it "gives useful message when private key is unset"

output="$(
run \
    /opt/resource/out \
    '{ source: { uri: "git@github.com:boclips/kustomize-version-resource-test-repo" } }' \
    || true
)"
assert_equal "Missing private key!" "$output"

rm -rf "$dir"
