#!/usr/bin/env bash

set -e

cwd="$(cd "$(dirname "$0")" && pwd)"

it () {
    echo "$@"
}

create () {
    image_id="$(cat "$cwd/../test_image_id")"
    docker create \
        --interactive \
        --entrypoint="$1" \
        "$image_id"
}

start_container () {
    container_id="$1"
    input="$(json "$2")"
    docker start \
        --interactive \
        "$container_id" \
        <<< "$input"
}

json () {
    jq --null-input "$@"
}

run () {
    entrypoint="$1"
    input="$2"
    container_id="$(create "$entrypoint")"
    start_container "$container_id" "$input"
}

assert_equal_json () {
    lhs="$(json "$1")"
    rhs="$(json "$2")"
    assert_equal "$lhs" "$rhs"
}

assert_equal () {
    if [ "$1" == "$2" ]
    then
        echo "Test passed"
        echo
    else
        echo "Test failed"
        echo
        echo "Expected output:"
        echo "$1"
        echo
        echo "Actual output:"
        echo "$2"
        echo
        exit 1
    fi
}

init_repo () {
    container_id=$1
    dir=$2
    (
        cd "$dir"
        mkdir remote-repo
        git -C remote-repo init --bare --quiet
        git clone --quiet remote-repo local-repo 2> /dev/null
        mkdir -p local-repo/k8s/base

        cd local-repo/k8s/base
        touch kustomization.yaml
    )
}

bump_version () {
    image=$1
    dir=$2
    (
        cd "$dir/local-repo/k8s/base"
        kustomize edit set image "$image"
        git add .
        git config --global user.email engineering@boclips.com
        git config --global user.name Concourse
        git commit --quiet --message=bump
        git push --quiet
    )
}

copy_kustomize_repo () {
    container_id=$1
    destination=$2
    dir=$3

    docker cp -a "$dir/remote-repo" "$container_id:/tmp/$destination"
}
