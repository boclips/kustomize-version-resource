#!/usr/bin/env bash

set -e

cwd="$(cd "$(dirname "$0")" && pwd)"

resource_output_dir () {
    local dir=/tmp/kustomize-version-resource-output
    mkdir --parents "$dir"
    echo "$dir"
}

it () {
    echo "$@"
}

run () {
    cmd="$cwd/../bin/$1"
    input="$(json "$2")"
    dir=$3
    (
    cd "$dir"
    $cmd "$(resource_output_dir)" <<< "$input"
    )
}

json () {
    jq --null-input "$@"
}

assert_equal_json () {
    lhs="$(json "$1")"
    rhs="$(json "$2")"
    assert_equal "$lhs" "$rhs"
}

green () {
    echo "$(tput setaf 2)$*$(tput sgr0)"
}

red () {
    echo "$(tput setaf 1)$*$(tput sgr0)"
}

assert_equal () {
    if [ "$1" == "$2" ]
    then
        green "Test passed"
        echo
    else
        red "Test failed"
        echo
        echo "Expected output:"
        echo "$1"
        echo
        echo "Actual output:"
        echo "$2"
        echo
        exit 1
    fi
}

init_kustomize_repo () {
    dir=$1
    (
        cd "$dir"
        mkdir remote-repo
        git -C remote-repo init --bare --quiet
        git clone --quiet remote-repo local-repo 2> /dev/null
        git -C local-repo config user.email engineering@boclips.com
        git -C local-repo config user.name Concourse
        mkdir -p local-repo/k8s/base

        cd local-repo/k8s/base
        touch kustomization.yaml
    )
}

commit_image () {
    image=$1
    dir=$2
    (
        cd "$dir/local-repo/k8s/base"
        kustomize edit set image "$image"
        git add .
        git commit --quiet --message="bump to $image"
    )
}

push_kustomize_repo () {
    dir=$1
    git -C "$dir/local-repo" push --quiet
}

copy_kustomize_repo () {
    dir=$1
    container_id=$2
    destination=$3

    cp -a "$dir/remote-repo" "$dir/$destination"
    docker cp -a "$dir/$destination" "$container_id:/tmp/"
    rm -rf "${dir:?}/$destination"
}
