#!/usr/bin/env bash

set -e

cwd="$(cd "$(dirname "$0")" && pwd)"
push="$cwd/../bin/push"
# shellcheck disable=SC1090
source "$cwd/common"

dir1=$(mktemp -d -t test-push1.XXXXX)
dir2=$(mktemp -d -t test-push2.XXXXX)
dir3=$(mktemp -d -t test-push3.XXXXX)
dir4=$(mktemp -d -t test-push4.XXXXX)

tidy () {
    rm -rf "$dir1" "$dir2" "$dir3" "$dir4"
}

trap tidy EXIT

it "rebases before push"

init_kustomize_repo "$dir1"
git -C "$dir1/local-repo" add .
git -C "$dir1/local-repo" commit --quiet --message "initial"
push_kustomize_repo "$dir1"
commit_image "my-app:1" "$dir1"

git clone --quiet "$dir1/remote-repo" "$dir2/local-repo" \
    2> /dev/null

git -C "$dir2/local-repo" commit \
    --quiet \
    --allow-empty \
    --message "engineer commit"
push_kustomize_repo "$dir2"

try_limit=3
$push "$dir1/local-repo" 1 "$try_limit" > /dev/null 2>&1

# these should be no-ops, because try 1 succeeded
$push "$dir1/local-repo" 2 "$try_limit" > /dev/null 2>&1
$push "$dir1/local-repo" 3 "$try_limit" > /dev/null 2>&1

git clone --quiet "$dir1/remote-repo" "$dir1/local-repo-assert"
assert_equal \
'bump to my-app:1
engineer commit
initial' \
    "$(git -C "$dir1/local-repo-assert" log --pretty=format:%s)"


it "gives up after n tries"

init_kustomize_repo "$dir3"
git -C "$dir3/local-repo" add .
git -C "$dir3/local-repo" commit --quiet --message "initial"
push_kustomize_repo "$dir3"
commit_image "app=my-app:1" "$dir3"

git clone --quiet "$dir3/remote-repo" "$dir4/local-repo" \
    2> /dev/null

commit_image "app=conflicting-image:1" "$dir4"
push_kustomize_repo "$dir4"

try_limit=2
exit_codes=""

$push "$dir3/local-repo" 1 "$try_limit" \
    > /dev/null 2>&1
exit_codes+=$?

$push "$dir3/local-repo" 2 "$try_limit" \
    > /dev/null 2>&1 \
    || exit_codes+=$?

assert_equal "01" "$exit_codes"
