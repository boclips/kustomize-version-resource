#!/usr/bin/env bash

set -eu

cwd="$(cd "$(dirname "$0")" && pwd)"
# shellcheck disable=SC1090
source "$cwd/common"

dir=$(mktemp -d -t test-in.XXXXXX)
init_kustomize_repo "$dir"
commit_image "app=eu.gcr.io/boclips-prod/boclips/my-app:123" "$dir"
push_kustomize_repo "$dir"

it "emits an unbumped tag"

non_bump_input="$(json '
{
    source: {
        uri: "/tmp/remote-repo-v123",
        private_key: "unused",
        kustomization_yaml_path: "k8s/base/kustomization.yaml"
    },
    version: {
        tag: "123",
        app: "my-app"
    },
    params: {}
}
')"

non_bump_output="$(run in \
    "$non_bump_input" \
    "$dir"
    )"

assert_equal_json \
    '{
  version: { tag: "123", app: "my-app" },
  metadata: [
    { name: "previous-tag", value: "123" },
    { name: "tag", value: "123" },
    { name: "app", value: "my-app" }
  ]
}' \
    "$non_bump_output"


bump_input="$(json '
{
    source: {
        uri: "/tmp/remote-repo-v123",
        private_key: "unused",
        kustomization_yaml_path: "k8s/base/kustomization.yaml"
    },
    version: {
        tag: "123",
        app: "my-app"
    },
    params: { bump: true }
}
')"
bump_output="$(run in \
    "$bump_input" \
    "$dir"
    )"

it "emits a bumped version"

assert_equal_json '{
  version: { tag: "124", app: "my-app" },
  metadata: [
    { name: "previous-tag", value: "123" },
    { name: "tag", value: "124" },
    { name: "app", value: "my-app" }
  ]
}' \
    "$bump_output"

it "writes bumped tag to the given dir"

assert_equal \
    "124" \
    "$(cat "$(resource_output_dir)/tag")"

it "writes app name to given dir"

assert_equal \
    "my-app" \
    "$(cat "$(resource_output_dir)/app")"

rm -rf "$dir"
