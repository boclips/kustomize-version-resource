#!/usr/bin/env bash

set -e

cwd="$(cd "$(dirname "$0")" && pwd)"
# shellcheck disable=SC1090
source "$cwd/common"

uri="git@github.com:boclips/backoffice.git"
private_key="$(bo show credential concourse-main boclips.backoffice repo-key)"
commit_with_149_version=870d3fd6bddc4d04f325e25b6eb3849f099e2565

it "echoes version"

assert_equal_json '
{
  version: { tag: "149", app: "backoffice" },
  metadata: [
    { name: "tag", value: "149" },
    { name: "app", value: "backoffice" }
  ]
}' \
    "$(run /opt/resource/in \
    "$(
jq \
    --null-input \
    --arg uri "$uri" \
    --arg branch "$commit_with_149_version" \
    --arg private_key "$private_key" \
    '{
       source: {
         uri: $uri,
         branch: $branch,
         private_key: $private_key
       },
       version: {
         tag: "149",
         app: "backoffice"
       },
       params: {}
     }'
)" \
    /tmp)"

it "writes tag to the given dir"

given_dir=/tmp
container_id="$(create /opt/resource/in $given_dir)"
dir=$(mktemp -d -t test-in.XXXXX)
init_repo "$container_id" "$dir"
bump_version "app=eu.gcr.io/boclips-prod/boclips/my-app:123" "$dir"
copy_kustomize_repo "$container_id" remote-repo-v123 "$dir"

input="$(json '
{
    source: {
        uri: "/tmp/remote-repo-v123",
        branch: "master",
        private_key: "unused"
    },
    version: {
        tag: "123",
        app: "my-app"
    },
    params: {}
}
')"
start_container "$container_id" "$input" > /dev/null
docker cp -a "$container_id:$given_dir/tag" "$dir/output-tag"

assert_equal \
    "123" \
    "$(cat "$dir/output-tag")"

it "writes app name to given dir"
docker cp -a "$container_id:$given_dir/app" "$dir/output-app"

assert_equal \
    "my-app" \
    "$(cat "$dir/output-app")"

docker rm "$container_id" > /dev/null
rm -rf "$dir"
