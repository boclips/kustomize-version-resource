#!/usr/bin/env bash

set -eu

cwd="$(cd "$(dirname "$0")" && pwd)"
# shellcheck disable=SC1090
source "$cwd/common"

concourse_writeable_dir=/tmp
container_id="$(create /opt/resource/in $concourse_writeable_dir)"
dir=$(mktemp -d -t test-in.XXXXX)
init_kustomize_repo "$dir"
commit_image "app=eu.gcr.io/boclips-prod/boclips/my-app:123" "$dir"
copy_kustomize_repo "$dir" "$container_id" remote-repo-v123

it "emits an unbumped tag"

non_bump_input="$(json '
{
    source: {
        uri: "/tmp/remote-repo-v123",
        branch: "master",
        private_key: "unused",
        kustomization_yaml_path: "k8s/base/kustomization.yaml"
    },
    version: {
        tag: "123",
        app: "my-app"
    },
    params: {}
}
')"

non_bump_output="$(start_container "$container_id" "$non_bump_input")"

assert_equal_json \
    '{
  version: { tag: "123", app: "my-app" },
  metadata: [
    { name: "previous-tag", value: "123" },
    { name: "tag", value: "123" },
    { name: "app", value: "my-app" }
  ]
}' \
    "$non_bump_output"


bump_input="$(json '
{
    source: {
        uri: "/tmp/remote-repo-v123",
        branch: "master",
        private_key: "unused",
        kustomization_yaml_path: "k8s/base/kustomization.yaml"
    },
    version: {
        tag: "123",
        app: "my-app"
    },
    params: { bump: true }
}
')"
bump_output="$(start_container "$container_id" "$bump_input")"

it "emits a bumped version"

assert_equal_json '{
  version: { tag: "124", app: "my-app" },
  metadata: [
    { name: "previous-tag", value: "123" },
    { name: "tag", value: "124" },
    { name: "app", value: "my-app" }
  ]
}' \
    "$bump_output"

it "writes bumped tag to the given dir"

docker cp -a "$container_id:$concourse_writeable_dir/tag" "$dir/output-tag"

assert_equal \
    "124" \
    "$(cat "$dir/output-tag")"

it "writes app name to given dir"
docker cp -a "$container_id:$concourse_writeable_dir/app" "$dir/output-app"

assert_equal \
    "my-app" \
    "$(cat "$dir/output-app")"

docker rm "$container_id" > /dev/null
rm -rf "$dir"
